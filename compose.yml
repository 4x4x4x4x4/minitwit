services:
  setup:
    profiles:
      - setup
    build:
      context: setup/
      args:
        ELASTIC_VERSION: 8.12.2
    init: true
    volumes:
      - ./setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./setup/lib.sh:/lib.sh:ro,Z
      - ./setup/roles:/roles:ro,Z
    environment:
      ELASTIC_PASSWORD: 'changeme'
      LOGSTASH_INTERNAL_PASSWORD: 'changeme'
      KIBANA_SYSTEM_PASSWORD: 'changeme'
      METRICBEAT_INTERNAL_PASSWORD: ''
      FILEBEAT_INTERNAL_PASSWORD: 'changeme'
      HEARTBEAT_INTERNAL_PASSWORD: ''
      MONITORING_INTERNAL_PASSWORD: ''
      BEATS_SYSTEM_PASSWORD: 'changeme'
    networks:
      - elk
    depends_on:
      - elasticsearch

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: 8.12.2
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - 9200:9200
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: 'changeme'
      discovery.type: single-node
    networks:
      - elk
    restart: unless-stopped

  logstash:
    build:
      context: logstash/
      args:
        ELASTIC_VERSION: 8.12.2
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - 5044:5044
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: 'changeme'
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: unless-stopped

  filebeat:
    extends:
      file: ./filebeat/filebeat-compose.yml
      service: filebeat

  kibana:
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: 8.12.2
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - 5601:5601
    environment:
      KIBANA_SYSTEM_PASSWORD: 'changeme'
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: unless-stopped
    
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile
    image: minitwit/webapp
    ports:
      - "80:5000"
    volumes:
      - .:/src/app
    depends_on:
      db:
        condition: service_healthy
    environment:
      db_IP: db
      db_password: knowledge
      db_name: minitwit_db

  db:
    build:
      dockerfile: docker/db/Dockerfile
    image: minitwit/db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: knowledge
      POSTGRES_DB: minitwit_db

networks:
  elk:
    driver: bridge
  main:

volumes:
  elasticsearch:
