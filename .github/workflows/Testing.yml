name: Testing

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clean up Docker packages
        run: |
          sudo apt-get remove --purge docker docker-engine docker.io containerd containerd.io
          sudo apt-get autoremove -y
          sudo apt-get clean

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            apt-transport-https \
            ca-certificates \
            curl \
            software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo tee /etc/apt/trusted.gpg.d/docker.asc
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          sudo systemctl start docker
          sudo systemctl enable docker

      - name: Get latest Docker Compose version
        id: compose_version
        run: |
         echo "version=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name | sed 's/v//')" >> $GITHUB_OUTPUT

      - name: Set up Docker Compose
        run: |
          curl -L https://github.com/docker/compose/releases/download/v${{ steps.compose_version.outputs.version }}/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build and start services with Docker Compose
        run: |
          docker compose up -d

      - name: Install Ruby Dependencies
        run: |
          gem install bundler
          bundle install 

      - name: Run tests with rspec
        run: bundle exec rspec ./spec/minitwit_spec.rb
        env:
          FRONTEND_URL: "http://localhost"
          RACK_ENV: test

      - name: Stop and remove Docker containers
        run: |
          docker-compose down

  trigger_develop_staging:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Trigger deploy staging
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/DeployTest.yml/dispatches\
            -d '{"ref": "main"}'
